version: '3.8'

services:

  app:
    &app
    container_name: app
    hostname: app
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./Dockerfile
    env_file:
      - ./.env.production
    networks:
      - internal
    volumes:
      - ./images:/images
    command: sh -c "uvicorn --factory main:create_app --host 0.0.0.0 --port 8000 --forwarded-allow-ips='*' --proxy-headers"


  nginx:
    container_name: nginx
    hostname: nginx
    build: ./nginx/
    depends_on:
      - app
    expose:
      - 80
      - 443
    volumes:
      - ./images:/images
    ports:
      - 80:80
      - 443:443
    networks:
      - internal

  postgres:
    image: postgres:16-bookworm
    container_name: postgres
    hostname: postgres
    env_file:
      - ./.env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  migrations:
    <<: *app
    ports: []
    networks:
      - internal
    container_name: migrations
    hostname: migrations
    command: sh -c "alembic upgrade head"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
