events {
  worker_connections  1024;
}
http {
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;

    server_tokens off; # Отключение версии
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    upstream backend {
        server app:8000;
    }

    # server {
    #     listen 80  default_server;
    #     listen [::]:80 default_server;
    #     server_name localhost;

    #     location / {
    #         limit_req zone=api_limit burst=2;

    #         location /api/v1/ {
    #             proxy_pass http://app;

    #             location /api/v1/chats/ws {
    #                 proxy_pass http://app;
    #                 proxy_http_version 1.1;
    #                 proxy_set_header Upgrade $http_upgrade;
    #                 proxy_set_header Connection "upgrade";
    #             }
    #         }

    #     }

    # }
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        location / {
            root /app;
        }

        location /images {
            root /;
        }

        location /admin {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_pass http://backend;
        }

        location /api/v1/ {
            limit_req zone=api_limit burst=2;

            proxy_redirect off;
            proxy_buffering off;

            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_pass http://backend;
        }
    }
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;

        return 301 https://$host$request_uri;
    }
}
